{
  "contractName": "Token2",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"this internal function mints token to given address\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/GitHub/Swapify-Core/contracts/test/Token2.sol\":\"Token2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/GitHub/Swapify-Core/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xa791b279660ee5eb66ebd4f23b539055d178ae24677f3a164567441ecfdcf73a\",\"urls\":[\"bzz-raw://06f36f585a8b82eb388ccccc4e8c483718a99a07f5f12d3217afc254ab139a68\",\"dweb:/ipfs/Qmedr3aAH6F3ZTgZJ3enoP92ZD8yNwiCStwtGknNXhiK8v\"]},\"/C/GitHub/Swapify-Core/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xb35283807a3600a1df7abff9d82a7f8b563711333cb769bb473ed7c9c5b80cb3\",\"urls\":[\"bzz-raw://76578c35c07b8447d0ab87d34b71a2c2ca6995b5888ab9f6127e822e3d3e6e8e\",\"dweb:/ipfs/QmVPaXWUbsXtVZoGaFg1DtcrRP9axX8XWJFy5jfJ9Mknkb\"]},\"/C/GitHub/Swapify-Core/contracts/test/ERC20Detailed.sol\":{\"keccak256\":\"0x48c8219a1d32be5c370f19e40d775f1be97065fad06a3031f7c4b81333857f1c\",\"urls\":[\"bzz-raw://fea5789cfe262f29f7056f67c8bd42575c2c80d1cb52db96222884264a539889\",\"dweb:/ipfs/Qmb9L4q2cZurRKEccketdM7FyMRR7KbArbXNGKoa6fjayu\"]},\"/C/GitHub/Swapify-Core/contracts/test/Token.sol\":{\"keccak256\":\"0xf826cd50c6d127cac6d96bcedcfe634c2377b73d8c05158ff8cc08df5a47f9f0\",\"urls\":[\"bzz-raw://4bd9f38c92329dc6894729de9b8f841e208f6f78fc37313788cded3e78f27277\",\"dweb:/ipfs/QmVrPL9eMopmCpkj7pFcHiBFzCmJK6GMoeGk2Ta3m7Zojj\"]},\"/C/GitHub/Swapify-Core/contracts/test/Token2.sol\":{\"keccak256\":\"0x868b9c086ef3a6be1dfe4ab81bdfe1f3acb35dcfe9f365dbed2bb73fa02a1477\",\"urls\":[\"bzz-raw://387d072e27ab9ec407e76a00ff53be9613512b5cb4ddc0a38dbbb3f98e21030d\",\"dweb:/ipfs/QmYRxef7rfoQVuPCKVt7y82gfGHEyk1mCnZF17wgRU4a9V\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600781526020017f546f6b656e2032000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f544f4b32000000000000000000000000000000000000000000000000000000008152506012826000908051906020019062000098929190620000d6565b508160019080519060200190620000b1929190620000d6565b5080600260006101000a81548160ff021916908360ff16021790555050505062000185565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200011957805160ff19168380011785556200014a565b828001600101855582156200014a579182015b82811115620001495782518255916020019190600101906200012c565b5b5090506200015991906200015d565b5090565b6200018291905b808211156200017e57600081600090555060010162000164565b5090565b90565b61132080620001956000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f19146102d057806370a082311461031e57806395d89b4114610376578063a457c2d7146103f9578063a9059cbb1461045f578063dd62ed3e146104c5576100b4565b806306fdde03146100b9578063095ea7b31461013c57806318160ddd146101a257806323b872dd146101c0578063313ce56714610246578063395093511461026a575b600080fd5b6100c161053d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101015780820151818401526020810190506100e6565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101886004803603604081101561015257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105df565b604051808215151515815260200191505060405180910390f35b6101aa6105f6565b6040518082815260200191505060405180910390f35b61022c600480360360608110156101d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610600565b604051808215151515815260200191505060405180910390f35b61024e6106b1565b604051808260ff1660ff16815260200191505060405180910390f35b6102b66004803603604081101561028057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106c8565b604051808215151515815260200191505060405180910390f35b61031c600480360360408110156102e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061076d565b005b6103606004803603602081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610880565b6040518082815260200191505060405180910390f35b61037e6108c9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103be5780820151818401526020810190506103a3565b50505050905090810190601f1680156103eb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104456004803603604081101561040f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061096b565b604051808215151515815260200191505060405180910390f35b6104ab6004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a10565b604051808215151515815260200191505060405180910390f35b610527600480360360408110156104db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a27565b6040518082815260200191505060405180910390f35b606060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105d55780601f106105aa576101008083540402835291602001916105d5565b820191906000526020600020905b8154815290600101906020018083116105b857829003601f168201915b5050505050905090565b60006105ec338484610aae565b6001905092915050565b6000600554905090565b600061060d848484610ca5565b6106a684336106a185600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f4590919063ffffffff16565b610aae565b600190509392505050565b6000600260009054906101000a900460ff16905090565b6000610763338461075e85600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc890919063ffffffff16565b610aae565b6001905092915050565b6107756105f6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038111156107ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806112a06028913960400191505060405180910390fd5b6107f882610880565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03811115610872576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018061124e602d913960400191505060405180910390fd5b61087c828261104b565b5050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109615780601f1061093657610100808354040283529160200191610961565b820191906000526020600020905b81548152906001019060200180831161094457829003601f168201915b5050505050905090565b6000610a063384610a0185600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f4590919063ffffffff16565b610aae565b6001905092915050565b6000610a1d338484610ca5565b6001905092915050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b34576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806112c86024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061122c6022913960400191505060405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061127b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610db1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806112096023913960400191505060405180910390fd5b610e0381600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f4590919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e9881600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc890919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284039150811115610fc2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b6000828284019150811015611045576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61110381600554610fc890919063ffffffff16565b60058190555061115b81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc890919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373546f6b656e313a2042616c616e6365206f66206d696e746572206578636565646564206d6178206c696d69742e45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373546f6b656e313a20546f74616c20737570706c79206578636565646564206d6178206c696d69742e45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820e82d3b6bc2f26aa02534db1d47ff47c64bf1fe008764750d5692f3365080774a64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f19146102d057806370a082311461031e57806395d89b4114610376578063a457c2d7146103f9578063a9059cbb1461045f578063dd62ed3e146104c5576100b4565b806306fdde03146100b9578063095ea7b31461013c57806318160ddd146101a257806323b872dd146101c0578063313ce56714610246578063395093511461026a575b600080fd5b6100c161053d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101015780820151818401526020810190506100e6565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101886004803603604081101561015257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105df565b604051808215151515815260200191505060405180910390f35b6101aa6105f6565b6040518082815260200191505060405180910390f35b61022c600480360360608110156101d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610600565b604051808215151515815260200191505060405180910390f35b61024e6106b1565b604051808260ff1660ff16815260200191505060405180910390f35b6102b66004803603604081101561028057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106c8565b604051808215151515815260200191505060405180910390f35b61031c600480360360408110156102e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061076d565b005b6103606004803603602081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610880565b6040518082815260200191505060405180910390f35b61037e6108c9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103be5780820151818401526020810190506103a3565b50505050905090810190601f1680156103eb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104456004803603604081101561040f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061096b565b604051808215151515815260200191505060405180910390f35b6104ab6004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a10565b604051808215151515815260200191505060405180910390f35b610527600480360360408110156104db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a27565b6040518082815260200191505060405180910390f35b606060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105d55780601f106105aa576101008083540402835291602001916105d5565b820191906000526020600020905b8154815290600101906020018083116105b857829003601f168201915b5050505050905090565b60006105ec338484610aae565b6001905092915050565b6000600554905090565b600061060d848484610ca5565b6106a684336106a185600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f4590919063ffffffff16565b610aae565b600190509392505050565b6000600260009054906101000a900460ff16905090565b6000610763338461075e85600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc890919063ffffffff16565b610aae565b6001905092915050565b6107756105f6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038111156107ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806112a06028913960400191505060405180910390fd5b6107f882610880565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03811115610872576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018061124e602d913960400191505060405180910390fd5b61087c828261104b565b5050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109615780601f1061093657610100808354040283529160200191610961565b820191906000526020600020905b81548152906001019060200180831161094457829003601f168201915b5050505050905090565b6000610a063384610a0185600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f4590919063ffffffff16565b610aae565b6001905092915050565b6000610a1d338484610ca5565b6001905092915050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b34576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806112c86024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061122c6022913960400191505060405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061127b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610db1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806112096023913960400191505060405180910390fd5b610e0381600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f4590919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e9881600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc890919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284039150811115610fc2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b6000828284019150811015611045576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61110381600554610fc890919063ffffffff16565b60058190555061115b81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc890919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373546f6b656e313a2042616c616e6365206f66206d696e746572206578636565646564206d6178206c696d69742e45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373546f6b656e313a20546f74616c20737570706c79206578636565646564206d6178206c696d69742e45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820e82d3b6bc2f26aa02534db1d47ff47c64bf1fe008764750d5692f3365080774a64736f6c63430005100032",
  "sourceMap": "84:488:19:-;;;131:60;8:9:-1;5:2;;;30:1;27;20:12;5:2;131:60:19;445:167:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;178:2:19;542:4:16;534:5;:12;;;;;;;;;;;;:::i;:::-;;567:6;557:7;:16;;;;;;;;;;;;:::i;:::-;;596:8;584:9;;:20;;;;;;;;;;;;;;;;;;445:167;;;84:488:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "84:488:19:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;84:488:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;682:83:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;682:83:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1373:150:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1373:150:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;396:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1995:256;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1995:256:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1534:83:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2660:206:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2660:206:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;282:287:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;282:287:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;550:110:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;550:110:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;884:87:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;884:87:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3369:216:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3369:216:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;873:156;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;873:156:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1092:134;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1092:134:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;682:83:16;719:13;752:5;745:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;682:83;:::o;1373:150:17:-;1439:4;1456:37;1465:10;1477:7;1486:6;1456:8;:37::i;:::-;1511:4;1504:11;;1373:150;;;;:::o;396:91::-;440:7;467:12;;460:19;;396:91;:::o;1995:256::-;2084:4;2101:36;2111:6;2119:9;2130:6;2101:9;:36::i;:::-;2148:73;2157:6;2165:10;2177:43;2213:6;2177:11;:19;2189:6;2177:19;;;;;;;;;;;;;;;:31;2197:10;2177:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;2148:8;:73::i;:::-;2239:4;2232:11;;1995:256;;;;;:::o;1534:83:16:-;1575:5;1600:9;;;;;;;;;;;1593:16;;1534:83;:::o;2660:206:17:-;2740:4;2757:79;2766:10;2778:7;2787:48;2824:10;2787:11;:23;2799:10;2787:23;;;;;;;;;;;;;;;:32;2811:7;2787:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;2757:8;:79::i;:::-;2854:4;2847:11;;2660:206;;;;:::o;282:287:19:-;371:13;:11;:13::i;:::-;365:2;357:27;348:5;:36;;340:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;471:13;481:2;471:9;:13::i;:::-;465:2;457:27;448:5;:36;;440:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;545:16;551:2;555:5;545;:16::i;:::-;282:287;;:::o;550:110:17:-;607:7;634:9;:18;644:7;634:18;;;;;;;;;;;;;;;;627:25;;550:110;;;:::o;884:87:16:-;923:13;956:7;949:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;884:87;:::o;3369:216:17:-;3454:4;3471:84;3480:10;3492:7;3501:53;3538:15;3501:11;:23;3513:10;3501:23;;;;;;;;;;;;;;;:32;3525:7;3501:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;3471:8;:84::i;:::-;3573:4;3566:11;;3369:216;;;;:::o;873:156::-;942:4;959:40;969:10;981:9;992:6;959:9;:40::i;:::-;1017:4;1010:11;;873:156;;;;:::o;1092:134::-;1164:7;1191:11;:18;1203:5;1191:18;;;;;;;;;;;;;;;:27;1210:7;1191:27;;;;;;;;;;;;;;;;1184:34;;1092:134;;;;:::o;6175:338::-;6286:1;6269:19;;:5;:19;;;;6261:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6367:1;6348:21;;:7;:21;;;;6340:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6451:6;6421:11;:18;6433:5;6421:18;;;;;;;;;;;;;;;:27;6440:7;6421:27;;;;;;;;;;;;;;;:36;;;;6489:7;6473:32;;6482:5;6473:32;;;6498:6;6473:32;;;;;;;;;;;;;;;;;;6175:338;;;:::o;4075:429::-;4191:1;4173:20;;:6;:20;;;;4165:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4275:1;4254:23;;:9;:23;;;;4246:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4350:29;4372:6;4350:9;:17;4360:6;4350:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;4330:9;:17;4340:6;4330:17;;;;;;;;;;;;;;;:49;;;;4413:32;4438:6;4413:9;:20;4423:9;4413:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;4390:9;:20;4400:9;4390:20;;;;;;;;;;;;;;;:55;;;;4478:9;4461:35;;4470:6;4461:35;;;4489:6;4461:35;;;;;;;;;;;;;;;;;;4075:429;;;:::o;296:129:13:-;348:6;390:1;384;380;:5;376:9;;;375:16;;367:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;296:129;;;;:::o;160:128::-;212:6;254:1;248;244;:5;240:9;;;239:16;;231:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;160:128;;;;:::o;4785:308:17:-;4880:1;4861:21;;:7;:21;;;;4853:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4946:24;4963:6;4946:12;;:16;;:24;;;;:::i;:::-;4931:12;:39;;;;5002:30;5025:6;5002:9;:18;5012:7;5002:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;4981:9;:18;4991:7;4981:18;;;;;;;;;;;;;;;:51;;;;5069:7;5048:37;;5065:1;5048:37;;;5078:6;5048:37;;;;;;;;;;;;;;;;;;4785:308;;:::o",
  "source": "pragma solidity =0.5.16;\r\n\r\nimport './ERC20Detailed.sol';\r\nimport './Token.sol';\r\n\r\ncontract Token2 is ERC20Detailed, Token {\r\n    constructor() ERC20Detailed('Token 2', 'TOK2', 18) public {}\r\n\r\n    /**\r\n     * @dev this internal function mints token to given address\r\n     */\r\n    function mint(address to, uint value) external {\r\n        require(value <= uint256(-1) - totalSupply(), \"Token1: Total supply exceeded max limit.\");\r\n        require(value <= uint256(-1) - balanceOf(to), \"Token1: Balance of minter exceeded max limit.\");\r\n        _mint(to, value);\r\n    }\r\n}",
  "sourcePath": "C:/GitHub/Swapify-Core/contracts/test/Token2.sol",
  "ast": {
    "absolutePath": "/C/GitHub/Swapify-Core/contracts/test/Token2.sol",
    "exportedSymbols": {
      "Token2": [
        3337
      ]
    },
    "id": 3338,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3281,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:19"
      },
      {
        "absolutePath": "/C/GitHub/Swapify-Core/contracts/test/ERC20Detailed.sol",
        "file": "./ERC20Detailed.sol",
        "id": 3282,
        "nodeType": "ImportDirective",
        "scope": 3338,
        "sourceUnit": 2825,
        "src": "28:29:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/GitHub/Swapify-Core/contracts/test/Token.sol",
        "file": "./Token.sol",
        "id": 3283,
        "nodeType": "ImportDirective",
        "scope": 3338,
        "sourceUnit": 3222,
        "src": "59:21:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3284,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2824,
              "src": "103:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$2824",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3285,
            "nodeType": "InheritanceSpecifier",
            "src": "103:13:19"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3286,
              "name": "Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3221,
              "src": "118:5:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$3221",
                "typeString": "contract Token"
              }
            },
            "id": 3287,
            "nodeType": "InheritanceSpecifier",
            "src": "118:5:19"
          }
        ],
        "contractDependencies": [
          2118,
          2824,
          3221
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3337,
        "linearizedBaseContracts": [
          3337,
          3221,
          2824,
          2118
        ],
        "name": "Token2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3295,
              "nodeType": "Block",
              "src": "189:2:19",
              "statements": []
            },
            "documentation": null,
            "id": 3296,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "546f6b656e2032",
                    "id": 3290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "159:9:19",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c751b5b68c0ab3f6eca892f0f099d5a090c64dfe42ad9cf60707ee1cc8d081d8",
                      "typeString": "literal_string \"Token 2\""
                    },
                    "value": "Token 2"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "544f4b32",
                    "id": 3291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "170:6:19",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_32b34c42078c212c5c32e16de7a2ec959734a0bfdae681cfe6e94bf6fef75c5c",
                      "typeString": "literal_string \"TOK2\""
                    },
                    "value": "TOK2"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 3292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "178:2:19",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 3293,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3289,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2824,
                  "src": "145:13:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$2824_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "145:36:19"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "142:2:19"
            },
            "returnParameters": {
              "id": 3294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:0:19"
            },
            "scope": 3337,
            "src": "131:60:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3335,
              "nodeType": "Block",
              "src": "329:240:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3304,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3300,
                          "src": "348:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "365:2:19",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 3306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "366:1:19",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              ],
                              "id": 3305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "357:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 3308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "357:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3309,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2853,
                              "src": "371:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 3310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "371:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "357:27:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "348:36:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e313a20546f74616c20737570706c79206578636565646564206d6178206c696d69742e",
                        "id": 3313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "386:42:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb893eb2133259624a530a5be59be671aea19c57a316ea4e2cb72f5d1e8165d7",
                          "typeString": "literal_string \"Token1: Total supply exceeded max limit.\""
                        },
                        "value": "Token1: Total supply exceeded max limit."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb893eb2133259624a530a5be59be671aea19c57a316ea4e2cb72f5d1e8165d7",
                          "typeString": "literal_string \"Token1: Total supply exceeded max limit.\""
                        }
                      ],
                      "id": 3303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6131,
                        6132
                      ],
                      "referencedDeclaration": 6132,
                      "src": "340:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "340:89:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3315,
                  "nodeType": "ExpressionStatement",
                  "src": "340:89:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3317,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3300,
                          "src": "448:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "465:2:19",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 3319,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "466:1:19",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              ],
                              "id": 3318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "457:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 3321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "457:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3323,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3298,
                                "src": "481:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3322,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2865,
                              "src": "471:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 3324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "471:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "457:27:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "448:36:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e313a2042616c616e6365206f66206d696e746572206578636565646564206d6178206c696d69742e",
                        "id": 3327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "486:47:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b25401384762acd7a04cf8481ccbb04cce8c87e988f948c24ed04ae8b46fdab",
                          "typeString": "literal_string \"Token1: Balance of minter exceeded max limit.\""
                        },
                        "value": "Token1: Balance of minter exceeded max limit."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b25401384762acd7a04cf8481ccbb04cce8c87e988f948c24ed04ae8b46fdab",
                          "typeString": "literal_string \"Token1: Balance of minter exceeded max limit.\""
                        }
                      ],
                      "id": 3316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6131,
                        6132
                      ],
                      "referencedDeclaration": 6132,
                      "src": "440:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "440:94:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3329,
                  "nodeType": "ExpressionStatement",
                  "src": "440:94:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3331,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3298,
                        "src": "551:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3332,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3300,
                        "src": "555:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3330,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3107,
                      "src": "545:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "545:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3334,
                  "nodeType": "ExpressionStatement",
                  "src": "545:16:19"
                }
              ]
            },
            "documentation": "@dev this internal function mints token to given address",
            "id": 3336,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3298,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3336,
                  "src": "296:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3300,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3336,
                  "src": "308:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3299,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "308:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "295:24:19"
            },
            "returnParameters": {
              "id": 3302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "329:0:19"
            },
            "scope": 3337,
            "src": "282:287:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3338,
        "src": "84:488:19"
      }
    ],
    "src": "0:572:19"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/GitHub/Swapify-Core/contracts/test/Token2.sol",
      "exportedSymbols": {
        "Token2": [
          3337
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "=",
            "0.5",
            ".16"
          ]
        },
        "id": 3281,
        "name": "PragmaDirective",
        "src": "0:24:19"
      },
      {
        "attributes": {
          "SourceUnit": 2825,
          "absolutePath": "/C/GitHub/Swapify-Core/contracts/test/ERC20Detailed.sol",
          "file": "./ERC20Detailed.sol",
          "scope": 3338,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3282,
        "name": "ImportDirective",
        "src": "28:29:19"
      },
      {
        "attributes": {
          "SourceUnit": 3222,
          "absolutePath": "/C/GitHub/Swapify-Core/contracts/test/Token.sol",
          "file": "./Token.sol",
          "scope": 3338,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3283,
        "name": "ImportDirective",
        "src": "59:21:19"
      },
      {
        "attributes": {
          "contractDependencies": [
            2118,
            2824,
            3221
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            3337,
            3221,
            2824,
            2118
          ],
          "name": "Token2",
          "scope": 3338
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Detailed",
                  "referencedDeclaration": 2824,
                  "type": "contract ERC20Detailed"
                },
                "id": 3284,
                "name": "UserDefinedTypeName",
                "src": "103:13:19"
              }
            ],
            "id": 3285,
            "name": "InheritanceSpecifier",
            "src": "103:13:19"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Token",
                  "referencedDeclaration": 3221,
                  "type": "contract Token"
                },
                "id": 3286,
                "name": "UserDefinedTypeName",
                "src": "118:5:19"
              }
            ],
            "id": 3287,
            "name": "InheritanceSpecifier",
            "src": "118:5:19"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 3337,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3288,
                "name": "ParameterList",
                "src": "142:2:19"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3294,
                "name": "ParameterList",
                "src": "189:0:19"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2824,
                      "type": "type(contract ERC20Detailed)",
                      "value": "ERC20Detailed"
                    },
                    "id": 3289,
                    "name": "Identifier",
                    "src": "145:13:19"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "546f6b656e2032",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Token 2\"",
                      "value": "Token 2"
                    },
                    "id": 3290,
                    "name": "Literal",
                    "src": "159:9:19"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "544f4b32",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"TOK2\"",
                      "value": "TOK2"
                    },
                    "id": 3291,
                    "name": "Literal",
                    "src": "170:6:19"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "3138",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 18",
                      "value": "18"
                    },
                    "id": 3292,
                    "name": "Literal",
                    "src": "178:2:19"
                  }
                ],
                "id": 3293,
                "name": "ModifierInvocation",
                "src": "145:36:19"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 3295,
                "name": "Block",
                "src": "189:2:19"
              }
            ],
            "id": 3296,
            "name": "FunctionDefinition",
            "src": "131:60:19"
          },
          {
            "attributes": {
              "documentation": "@dev this internal function mints token to given address",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 3337,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 3336,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3297,
                        "name": "ElementaryTypeName",
                        "src": "296:7:19"
                      }
                    ],
                    "id": 3298,
                    "name": "VariableDeclaration",
                    "src": "296:10:19"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "value",
                      "scope": 3336,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 3299,
                        "name": "ElementaryTypeName",
                        "src": "308:4:19"
                      }
                    ],
                    "id": 3300,
                    "name": "VariableDeclaration",
                    "src": "308:10:19"
                  }
                ],
                "id": 3301,
                "name": "ParameterList",
                "src": "295:24:19"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3302,
                "name": "ParameterList",
                "src": "329:0:19"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bb893eb2133259624a530a5be59be671aea19c57a316ea4e2cb72f5d1e8165d7",
                                  "typeString": "literal_string \"Token1: Total supply exceeded max limit.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                6131,
                                6132
                              ],
                              "referencedDeclaration": 6132,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 3303,
                            "name": "Identifier",
                            "src": "340:7:19"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3300,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 3304,
                                "name": "Identifier",
                                "src": "348:5:19"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "-",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_minus_1_by_1",
                                              "typeString": "int_const -1"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(uint256)",
                                          "value": "uint256"
                                        },
                                        "id": 3305,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "357:7:19"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "operator": "-",
                                          "prefix": true,
                                          "type": "int_const -1"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "31",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 1",
                                              "value": "1"
                                            },
                                            "id": 3306,
                                            "name": "Literal",
                                            "src": "366:1:19"
                                          }
                                        ],
                                        "id": 3307,
                                        "name": "UnaryOperation",
                                        "src": "365:2:19"
                                      }
                                    ],
                                    "id": 3308,
                                    "name": "FunctionCall",
                                    "src": "357:11:19"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2853,
                                          "type": "function () view returns (uint256)",
                                          "value": "totalSupply"
                                        },
                                        "id": 3309,
                                        "name": "Identifier",
                                        "src": "371:11:19"
                                      }
                                    ],
                                    "id": 3310,
                                    "name": "FunctionCall",
                                    "src": "371:13:19"
                                  }
                                ],
                                "id": 3311,
                                "name": "BinaryOperation",
                                "src": "357:27:19"
                              }
                            ],
                            "id": 3312,
                            "name": "BinaryOperation",
                            "src": "348:36:19"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "546f6b656e313a20546f74616c20737570706c79206578636565646564206d6178206c696d69742e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Token1: Total supply exceeded max limit.\"",
                              "value": "Token1: Total supply exceeded max limit."
                            },
                            "id": 3313,
                            "name": "Literal",
                            "src": "386:42:19"
                          }
                        ],
                        "id": 3314,
                        "name": "FunctionCall",
                        "src": "340:89:19"
                      }
                    ],
                    "id": 3315,
                    "name": "ExpressionStatement",
                    "src": "340:89:19"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3b25401384762acd7a04cf8481ccbb04cce8c87e988f948c24ed04ae8b46fdab",
                                  "typeString": "literal_string \"Token1: Balance of minter exceeded max limit.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                6131,
                                6132
                              ],
                              "referencedDeclaration": 6132,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 3316,
                            "name": "Identifier",
                            "src": "440:7:19"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3300,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 3317,
                                "name": "Identifier",
                                "src": "448:5:19"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "-",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_minus_1_by_1",
                                              "typeString": "int_const -1"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(uint256)",
                                          "value": "uint256"
                                        },
                                        "id": 3318,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "457:7:19"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "operator": "-",
                                          "prefix": true,
                                          "type": "int_const -1"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "31",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 1",
                                              "value": "1"
                                            },
                                            "id": 3319,
                                            "name": "Literal",
                                            "src": "466:1:19"
                                          }
                                        ],
                                        "id": 3320,
                                        "name": "UnaryOperation",
                                        "src": "465:2:19"
                                      }
                                    ],
                                    "id": 3321,
                                    "name": "FunctionCall",
                                    "src": "457:11:19"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2865,
                                          "type": "function (address) view returns (uint256)",
                                          "value": "balanceOf"
                                        },
                                        "id": 3322,
                                        "name": "Identifier",
                                        "src": "471:9:19"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 3298,
                                          "type": "address",
                                          "value": "to"
                                        },
                                        "id": 3323,
                                        "name": "Identifier",
                                        "src": "481:2:19"
                                      }
                                    ],
                                    "id": 3324,
                                    "name": "FunctionCall",
                                    "src": "471:13:19"
                                  }
                                ],
                                "id": 3325,
                                "name": "BinaryOperation",
                                "src": "457:27:19"
                              }
                            ],
                            "id": 3326,
                            "name": "BinaryOperation",
                            "src": "448:36:19"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "546f6b656e313a2042616c616e6365206f66206d696e746572206578636565646564206d6178206c696d69742e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Token1: Balance of minter exceeded max limit.\"",
                              "value": "Token1: Balance of minter exceeded max limit."
                            },
                            "id": 3327,
                            "name": "Literal",
                            "src": "486:47:19"
                          }
                        ],
                        "id": 3328,
                        "name": "FunctionCall",
                        "src": "440:94:19"
                      }
                    ],
                    "id": 3329,
                    "name": "ExpressionStatement",
                    "src": "440:94:19"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3107,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 3330,
                            "name": "Identifier",
                            "src": "545:5:19"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3298,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 3331,
                            "name": "Identifier",
                            "src": "551:2:19"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3300,
                              "type": "uint256",
                              "value": "value"
                            },
                            "id": 3332,
                            "name": "Identifier",
                            "src": "555:5:19"
                          }
                        ],
                        "id": 3333,
                        "name": "FunctionCall",
                        "src": "545:16:19"
                      }
                    ],
                    "id": 3334,
                    "name": "ExpressionStatement",
                    "src": "545:16:19"
                  }
                ],
                "id": 3335,
                "name": "Block",
                "src": "329:240:19"
              }
            ],
            "id": 3336,
            "name": "FunctionDefinition",
            "src": "282:287:19"
          }
        ],
        "id": 3337,
        "name": "ContractDefinition",
        "src": "84:488:19"
      }
    ],
    "id": 3338,
    "name": "SourceUnit",
    "src": "0:572:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {},
      "links": {},
      "address": "0x954ee2CabC7730fbc9AF46B0AD557B824386dEEd",
      "transactionHash": "0x62ab2a07ac5ed6161d940c619ce21730bd4109277fd21fe3cba3476f561eacbd"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2022-03-03T19:20:15.303Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "this internal function mints token to given address"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}